// Obtén referencias a los elementos del DOM
const logSection = document.getElementById('log-section');
const generateLogButton = document.getElementById('generate-log');

// Función para agregar un log al HTML
function addLog(message, type = 'info') {
    // Crear un nuevo elemento para el log
    const logEntry = document.createElement('div');
    logEntry.classList.add('log-entry');
    logEntry.classList.add(`text-${type}`); // Colores según Bootstrap (e.g., text-info, text-danger)

    // Agregar el mensaje con la hora actual
    const timestamp = new Date().toLocaleTimeString();
    logEntry.textContent = `[${timestamp}] ${message}`;

    // Añadir el log al contenedor
    logSection.appendChild(logEntry);

    // Hacer scroll automático hacia abajo
    logSection.scrollTop = logSection.scrollHeight;
}

// Evento del botón para generar logs
generateLogButton.addEventListener('click', () => {
    // Generar un mensaje aleatorio
    const logTypes = ['info', 'warning', 'danger', 'success'];
    const randomType = logTypes[Math.floor(Math.random() * logTypes.length)];
    const messages = [
        'User logged in',
        'Data fetched successfully',
        'Error connecting to the server',
        'New record created',
        'User logged out',
    ];
    const randomMessage = messages[Math.floor(Math.random() * messages.length)];

    // Agregar el log
    addLog(randomMessage, randomType);
});

// Ejemplo inicial
addLog('Log viewer initialized', 'success');
